#!/bin/sh

set -e

REPOSITORY_PATH=`git rev-parse --show-toplevel 2> /dev/null || pwd`
REMOTE_HOME="/home/largo"
PRIMARY_DNS="8.8.8.8" #`nmcli device show | awk '/\.DNS\[/ { print $2 }' | head -n 1`
USER_ID=`id -u`
GROUP_ID=`id -g`

usage() {
    echo "Usage: largo-run <project-name> [<args>]"
}

case $# in
    0)
    usage
    exit 1
    ;;
    *)
    PROJECT=${1}
    IMAGE_NAME="largo/${PROJECT}"
    CONTAINER_NAME="${PROJECT}"
    REMOTE_WORKDIR="${REMOTE_HOME}/${PROJECT}"
    shift
    ;;
esac

# the trick of forwarding the SSH agent into the Docker container comes from Docker issue #6396 on GitHub
# however, it was most probably first introduced by Chris Corbyn <https://gist.github.com/d11wtq/8699521>
sudo docker run \
    --privileged \
    -e DEV_UID=${USER_ID} \
    -e DEV_GID=${GROUP_ID} \
    --interactive \
    --tty \
    --dns ${PRIMARY_DNS} \
    --name ${CONTAINER_NAME} \
    --volume ${REPOSITORY_PATH}:${REMOTE_WORKDIR} \
    --volume "$SSH_AUTH_SOCK:/tmp/ssh_auth_sock" \
    --rm \
    "$@" \
    ${IMAGE_NAME}
