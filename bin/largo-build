#!/bin/sh

set -e

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
CONFIG_DIR="${SCRIPTPATH}/../config"
SSH_DIR="${SCRIPTPATH}/../config/.ssh"

usage() {
    echo "Usage: largo-build --base <base-image>"
    echo "       largo-build [<project-name>]"
}

case $# in
    0)
    PROJECT=${PWD##*/}
    IMAGE_NAME="largo/${PROJECT}"
    ;;
    1)
    if [ "${1}" = "--base" ]; then
        echo "Usage: largo-build --base <base-image>"
        exit 1
    fi
    PROJECT=${1}
    IMAGE_NAME="largo/${PROJECT}"
    ;;
    2)
    if [ "${1}" = "--base" ]; then
        BASE=${2}
        IMAGE_NAME="largo/base-${BASE}"
    else
        usage
        exit 1
    fi
    ;;
    *)
    usage
    exit 1
    ;;
esac

if [ -n "${BASE}" ]; then
    cp -f ${SCRIPTPATH}/../base/Dockerfile.${BASE} ${SCRIPTPATH}/../base/Dockerfile
    sudo docker build \
        --tag ${IMAGE_NAME} \
        --force-rm \
        ${SCRIPTPATH}/../base/
    rm ${SCRIPTPATH}/../base/Dockerfile
else
    for file in `find ${CONFIG_DIR} -maxdepth 1 -not -type d | grep -v .gitignore`; do
        mkdir -p config
        cp -f $file config/
    done

    for file in `ls -AL -I .gitignore ${SSH_DIR}`; do
        mkdir -p config/.ssh
        cp -f ${SSH_DIR}/$file config/.ssh/
    done

    sudo docker build \
        --tag ${IMAGE_NAME} \
        --force-rm \
        .
fi
